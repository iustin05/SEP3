# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Frontend .NET Testing

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  build-test:
    name: Testing .NET
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./frontend
      - name: Build
        run: dotnet build --no-restore
        working-directory: ./frontend
      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./frontend
  codeql:
    name: CodeQL Static Code Analysis
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./frontend
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: csharp
          config: |
            disable-default-queries: true
            queries:
              - uses: security-extended
              - uses: security-and-quality
      - name: Build .NET Code
        run: dotnet build --no-restore
        working-directory: ./frontend
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  build:
    name: Final Build .NET
    runs-on: windows-latest
    needs: codeql
    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release
        working-directory: ./frontend

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/frontendapp
        working-directory: ./frontend

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/frontendapp

  deploy:
    name: Deploy to Azure
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Frontend Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'sep3group1'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_FD6537FBB8374569ABB1C47E688EA238 }}
          package: .