@if (IsOpen)
{
    <div class="modal-backdrop show"></div>
    <div class="modal show" tabindex="-1" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Book Car</h5>
                </div>
                <div class="modal-body">
                    <label for="startDate">Start Date:</label>
                    <InputDate id="startDate" @bind-Value="StartDate" />
                    <br />
                    <label for="endDate">End Date:</label>
                    <InputDate id="endDate" @bind-Value="EndDate" />
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="Close">Cancel</button>
                    <button class="btn btn-primary" @onclick="Confirm">Book</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public EventCallback<bool> IsOpenChanged { get; set; }
    [Parameter] public EventCallback<BookingDates> OnConfirm { get; set; }

    public DateTime StartDate { get; set; } = DateTime.Today;
    public DateTime EndDate { get; set; } = DateTime.Today.AddDays(1);

    private void Close() => IsOpenChanged.InvokeAsync(false);

    private void Confirm()
    {
        Close();
        OnConfirm.InvokeAsync(new BookingDates { StartDate = StartDate, EndDate = EndDate });
    }

    public class BookingDates
    {
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
    }
}
